\documentclass{article}

\usepackage[margin=.5in]{geometry}
\usepackage[section]{placeins}  %% keeps output from floating into adjoining sections
\usepackage{setspace} %for Hmisc::describe
\usepackage{relsize}  %for Hmisc::describe
\usepackage{fixltx2e}
\usepackage{booktabs} % for table formatting
\usepackage{longtable}
\usepackage{rotating}

\begin{document}


<<setup, echo=FALSE , message=FALSE>>=
opts_chunk$set( echo=FALSE, 
               fig.align='center',
               message=FALSE, comment="", tidy=TRUE, results='asis',warnings=FALSE)
library(xtable)
library(plyr)
library(reshape)
require(survival)
require(ggplot2)
require(scales)
@

\title{{\bf Chapter 4 - Time to Status Adjustment, by country of birth and TB burden}\\
Applicants for Status Adjustment in the US\\
USCIS Data}
\maketitle

\newpage
\tableofcontents           
\listoftables
\listoffigures

\newpage
<<'Load data'>>=
load("C:/Users/wau4/Desktop/uscis/uscis/ni.main.Rda")
@

\section{Introduction}

In this section, we will focus on the issue of time to status adjustment.  As discussed in the introduction, the duration of importance is the time spent in the US before taking civil surgeon exam.  However, since the date of the examination is unavailable, the date of status adjustment application is being used as a proxy measure.  Duration is therefore the time between last entry into the US and the date of application for status adjustment.  


<<'High TB burden countries'>>=
hightb <- subset(ni.main, tbburden=="high (TB incidence>=100/100,000)", drop=TRUE) 
hightb$tbburden <- factor(hightb$tbburden)
hightb$COB <- factor(hightb$COB)
hightbsubset <- subset(hightb, COB=="India" | COB=="Peru" | COB=="Viet Nam" | COB=="Kenya" | COB=="Nigeria")
hightbsubset$COB <- factor(hightbsubset$COB)
#Display frequency of status adjusters from countries with high TB incidence rate (>100/100,000)
#df <- ddply(hightb, .(COB), function(x) c(count=nrow(x)))
#df <- rename(df, c(COB="Country of birth", count="Number"))
@

<<'Countries with high tb incidence-table',eval=FALSE>>=
print(xtable(df, caption="Status adjustment applicants from countries with high TB incidence"), include.rownames=FALSE)
@


<<'Medium TB burden countries'>>=
mediumtb <- subset(ni.main, tbburden=="medium (TB incidence >=20 to <100/100,000)", drop=TRUE) 
mediumtb$tbburden <- factor(mediumtb$tbburden)
mediumtb$COB <- factor(mediumtb$COB)
mediumtbsubset <- subset(mediumtb, COB=="China"| COB=="Japan"| COB=="El Salvador" | COB=="Guatemala" | COB=="Poland")
mediumtbsubset$COB <- factor(mediumtbsubset$COB)
#Display frequency of status adjusters from countries with medium TB incidence rate (20-100/100,000)
#df <- ddply(mediumtb, .(COB), function(x) c(count=nrow(x)))
#df <- rename(df, c(COB="Country of birth", count="Number"))
@

<<'Countries with medium tb incidence-table',eval=FALSE>>=
print(xtable(df, caption="Status adjustment applicants from countries with medium TB incidence"), include.rownames=FALSE)
@

<<'Low TB burden countries'>>=
lowtb <- subset(ni.main, tbburden=="low (TB incidence<20/100,000)", drop=TRUE) 
lowtb$tbburden <- factor(lowtb$tbburden)
lowtb$COB <- factor(lowtb$COB)
lowtbsubset <- subset(lowtb, COB=="Mexico" | COB=="Cuba" | COB=="Trinidad" | COB=="Germany" | COB=="Jamaica")
lowtbsubset$COB <- factor(lowtbsubset$COB)
#Display frequency of status adjusters from countries with low TB incidence rate (<20/100,000)
#df <- ddply(lowtb, .(COB), function(x) c(count=nrow(x)))
#df <- rename(df, c(COB="Country of birth", count="Number"))
@

<<'Countries with low tb incidence-table',eval=FALSE>>=
print(xtable(df, caption="Status adjustment applicants from countries with low TB incidence"), include.rownames=FALSE)
@

<<'full table',eval=FALSE>>=
require(plyr)
df <- ddply(ni.main, .(region, COB, tbburden), function(x) c(count=nrow(x)))

df <- rename(df, c(count="Number", tbburden="WHO TB incidence", region="Region", COB="Country of birth"))
@

<<'print full table',eval=FALSE>>=
x.big <- xtable(df,label='tabbig',caption='Number of status adjusters by, region, country of birth and TB burden')
print(x.big, tabular.environment='longtable', floating=FALSE, include.rownames=FALSE, size="small")
@

<<'defining survival frame'>>=
# define custom function to create a survival data.frame
#This data.frame will allow use of ggplot to plot the survival function (rather than using plot)
#The original code for creating this data.frame (provide url) was modified to plot the hazard function (cumevent) rather than the survival function
createSurvivalFrame <- function(f.survfit){
  # initialise frame variable
  f.frame <- NULL
  # check if more then one strata
  if(length(names(f.survfit$strata)) == 0){
    # create data.frame with data from survfit
    f.frame <- data.frame(time=f.survfit$time, n.risk=f.survfit$n.risk, n.event=f.survfit$n.event, n.censor = f.survfit
                          $n.censor, surv=f.survfit$surv, cumevent=f.survfit$cumevent, upper=f.survfit$upper, lower=f.survfit$lower)
    # create first two rows (start at 1)
    f.start <- data.frame(time=c(0, f.frame$time[1]), n.risk=c(f.survfit$n, f.survfit$n), n.event=c(0,0),
                          n.censor=c(0,0), surv=c(1,1), cumevent=c(0,0), upper=c(1,1), lower=c(1,1))
    # add first row to dataset
    f.frame <- rbind(f.start, f.frame)
    # remove temporary data
    rm(f.start)
  }
  else {
    
    # create vector for strata identification
    f.strata <- NULL
    for(f.i in 1:length(f.survfit$strata)){
      # add vector for one strata according to number of rows of strata
      f.strata <- c(f.strata, rep(names(f.survfit$strata)[f.i], f.survfit$strata[f.i]))
    }
    # create data.frame with data from survfit (create column for strata)
    f.frame <- data.frame(time=f.survfit$time, n.risk=f.survfit$n.risk, n.event=f.survfit$n.event, n.censor = f.survfit
                          $n.censor, surv=f.survfit$surv, cumevent=f.survfit$cumevent, upper=f.survfit$upper, lower=f.survfit$lower, strata=factor(f.strata))
    # remove temporary data
    rm(f.strata)
    # create first two rows (start at 1) for each strata
    for(f.i in 1:length(f.survfit$strata)){
      # take only subset for this strata from data
      f.subset <- subset(f.frame, strata==names(f.survfit$strata)[f.i])
      # create first two rows (time: 0, time of first event)
      f.start <- data.frame(time=c(0, f.subset$time[1]), n.risk=rep(f.survfit[f.i]$n, 2), n.event=c(0,0),
                            n.censor=c(0,0), surv=c(1,1), cumevent=c(0,0), upper=c(1,1), lower=c(1,1), strata=rep(names(f.survfit$strata)[f.i],
                                                                                                                  2))
      # add first two rows to dataset
      f.frame <- rbind(f.start, f.frame)
      # remove temporary data
      rm(f.start, f.subset)
    }
    # reorder data
    f.frame <- f.frame[order(f.frame$strata, f.frame$time), ]
    # rename row.names
    rownames(f.frame) <- NULL
  }
  # return frame
  return(f.frame)
}

# define custom function to draw kaplan-meier curve with ggplot
qplot_survival <- function(f.frame, f.CI="default", f.shape=3){
  # use different plotting commands dependig whether or not strata's are given
  if("strata" %in% names(f.frame) == FALSE){
    # confidence intervals are drawn if not specified otherwise
    if(f.CI=="default" | f.CI==TRUE ){
      # create plot with 4 layers (first 3 layers only events, last layer only censored)
      # hint: censoring data for multiple censoring events at timepoint are overplotted
      # (unlike in plot.survfit in survival package)
      ggplot(data=f.frame) + geom_step(aes(x=time, y=cumevent), direction="hv") + geom_step(aes(x=time,
                                                                                                y=upper), directions="hv", linetype=2) + geom_step(aes(x=time,y=lower), direction="hv", linetype=2)
    }
    else {
      # create plot without confidence intervalls
      ggplot(data=f.frame) + geom_step(aes(x=time, y=cumevent), direction="hv")
    }
  }
  else {
    if(f.CI=="default" | f.CI==FALSE){
      # without CI
      ggplot(data=f.frame, aes(group=strata, colour=strata)) + geom_step(aes(x=time, y=cumevent),
                                                                         direction="hv")
    }
    else {
      # with CI (hint: use alpha for CI)
      ggplot(data=f.frame, aes(colour=strata, group=strata)) + geom_step(aes(x=time, y=cumevent),
                                                                         direction="hv") + geom_step(aes(x=time, y=upper), directions="hv", linetype=2, alpha=0.5) +
                                                                           geom_step(aes(x=time,y=lower), direction="hv", linetype=2, alpha=0.5)
    }
  }
}
@

\section{Time to status adjustment} 
Figure 1 shows the cumulative probability of status adjustment for all non-immigrants status adjustment applicants.  The median time to status adjustment is \Sexpr{median(ni.main$texamyr)} years.
<<'time to status adjustment-overall', fig.height=4,fig.width=6,warning=FALSE,fig.cap="Status adjustment in non-immigrant applicants">>=
#Survival frame
t.survfit <- survfit(Surv(texamyr, status)~1, data=ni.main)
t.survfit$cumevent <- 1-t.survfit$surv
t.survframe <- createSurvivalFrame(t.survfit)
xref=data.frame(xval=c(2.5, 5))
yref=data.frame(yval=c(0.5, 0.8))
p <- qplot_survival(t.survframe, FALSE) + xlab("time to exam (years)") + ylab("Cumulative probability \nof adjusting status") 
#false option next to t.survframe is to suppress the CIs.
p + geom_vline(aes(xintercept=xval), data=xref, color="blue", linetype="dashed") + geom_hline(aes(yintercept=yval), data=yref, color="blue", linetype="dashed") + scale_y_continuous(labels=percent) + scale_x_continuous(limits=c(0, 20), breaks=c(0, 2.5, 5, 7.5, 10, 15, 20))
@
\FloatBarrier

<<'TB burden-summary',eval=FALSE>>=
require(Hmisc)
describe(ni.main$texamyr)
@

Time to status adjustment by TB burden of the country of birth is shown Table 1. Figure 2 shows time to status adjustment by high, medium and low TB burden countries as defined by WHO (a) and Yecai (b).
<<'TB burden-collapse'>>=
df <- ddply(ni.main, .(tbburden), function(x) c(count=nrow(x), mean=mean(x$texamyr), max=max(x$texamyr), quantile=quantile(x$texamyr, seq(.25, .75, by=.25))))
df <- rename(df, c(tbburden="TB burden", count="Number", mean="Mean time to exam", max="Max.time to exam"))
df <- df[order(-df$Number),]
@

<<'TB burden-table'>>=
cols.comma = c(2)
df[, cols.comma] = prettyNum( df[, cols.comma], big.mark=",", drop0trailing = TRUE)
x.rescale <- xtable(df, caption="Time to status adjustment for applicants from high, medium and low TB burden countries",digits=c(0,0,0,2,2,2,2,2), align=c('l', 'l', 'r', 'r', 'r', 'r', 'r', 'r'))
print(x.rescale, scalebox=.8,include.rownames=FALSE)
@

\newpage
<<'time to status adjustment-by tb burden', fig.height=6,fig.width=8,warning=FALSE,fig.cap="Status adjustment in non-immigrant applicants">>=
#Survival frame
t.survfit <- survfit(Surv(texamyr, status)~tbburden, data=ni.main)
t.survfit$cumevent <- 1-t.survfit$surv
t.survframe <- createSurvivalFrame(t.survfit)
#colour <- c("red", "blue", "green")
xref=data.frame(xval=c(2.5, 5))
yref=data.frame(yval=c(0.5, 0.8))
@

<<'tb plot'>>=
tb <- qplot_survival(t.survframe, FALSE) + xlab("time to exam (years)") + 
  opts(title="(a) WHO definition of TB burden") + geom_vline(aes(xintercept=xval), data=xref, color="blue", linetype="dashed") + geom_hline(aes(yintercept=yval), data=yref, color="blue", linetype="dashed") + scale_y_continuous(labels=percent) + scale_x_continuous(limits=c(0, 20), breaks=c(0, 2.5, 5, 7.5, 10, 15, 20)) + theme_bw() + scale_colour_hue(name="TB burden of country of birth",                                                                                                                                                                                                                                                                                                                 breaks=c("tbburden=high (TB incidence>=100/100,000)", "tbburden=medium (TB incidence >=20 to <100/100,000)", "tbburden=low (TB incidence<20/100,000)"),                                                                                                                                                                                                                                                                                                                 labels=c("High >=100/100,000", "Medium >=20 to <100/100,000", "Low <20/100,000"),                                                                                                                                                                                                                                                                                                                l=40) +
  opts(legend.justification=c(1,0), legend.position=c(1,0)) + opts(axis.title.y = theme_blank())
@

<<'time to status adjustment-by tb burden yecai', fig.height=6,fig.width=8,warning=FALSE,fig.cap="Status adjustment in non-immigrant applicants">>=
#Survival frame
t.survfit <- survfit(Surv(texamyr, status)~tbburden.yecai, data=ni.main)
t.survfit$cumevent <- 1-t.survfit$surv
t.survframe <- createSurvivalFrame(t.survfit)
@

<<'tbyecai plot'>>=
#colour <- c("red", "blue", "green")
tbyecai <- qplot_survival(t.survframe, FALSE) + xlab("time to exam (years)") +
opts(title="(b) Yecai's definition of TB burden") + geom_vline(aes(xintercept=xval), data=xref, color="blue", linetype="dashed") + geom_hline(aes(yintercept=yval), data=yref, color="blue", linetype="dashed") + scale_y_continuous(labels=percent) + scale_x_continuous(limits=c(0, 20), breaks=c(0, 2.5, 5, 7.5, 10, 15, 20)) + theme_bw() + scale_colour_hue(name="TB burden of country of birth",                                                                                                                                                                                                                                                                                                                 breaks=c("tbburden.yecai=high (TB incidence>=100/100,000)", "tbburden.yecai=medium (TB incidence >=15 to <100/100,000)", "tbburden.yecai=low (TB incidence<15/100,000)"),                                                                                                                                                                                                                                                                                                                 labels=c("High >=100/100,000", "Medium >=15 to <100/100,000", "Low <15/100,000"),                                                                                                                                                                                                                                                                                                                l=40) +
  opts(legend.justification=c(1,0), legend.position=c(1,0)) + opts(axis.title.y = theme_blank())
@

<<'Generating combined plot-by Yecai TB',fig.height=6,fig.width=20,fig.align='center',fig.cap="Country of birth of non-immigrant applicants for status adjustment, by TB burden",warning=FALSE>>=
require(gridExtra)
pdf("tbgrid.pdf", width=15, height=6)
tbgrid <- grid.arrange(tb, tbyecai, nrow=1, ncol=2, left=textGrob("Cumulative probability of adjusting status", rot=90))
@

\begin{sidewaysfigure}
\centering
\scalebox{0.6}
{\includegraphics{tbgrid.pdf}}
\caption{Time to status adjustment, by TB burden  of country of birth}
\end{sidewaysfigure}
\FloatBarrier

%Time to status adjustment by country of birth

<<'time to status adjustment-by country of birth',warning=FALSE,eval=FALSE>>=
##strata - by country
t.survfit <- survfit(Surv(texamyr, status)~COB, data=ni.main)
t.survfit$cumevent <- 1- t.survfit$surv #to create cumulative frequency variable (1-surv)
t.survframe <- createSurvivalFrame(t.survfit)
#this plot is too crowded and non-meaninfgful but here to just to show; the plots to follow break up this plot by TB burden and geographical region, making them more interpretable.
p <- qplot_survival(t.survframe, FALSE) + scale_x_continuous(limits=c(0, 10)) + xlab("time to exam (years)") + ylab("Cumulative probability of adjusting status") + opts(title="Status adjustment in non-immigrant applicants") + opts(legend.position="none")

xref=data.frame(xval=c(2.5, 5))
yref=data.frame(yval=c(0.5, 0.8)) 
p + geom_vline(aes(xintercept=xval), data=xref, color="blue", linetype="dashed") + geom_hline(aes(yintercept=yval), data=yref, color="blue", linetype="dashed") + scale_y_continuous(labels=percent) 
@

\newpage
\section{Time to status adjustment by country of birth and TB burden (WHO definition)}
In this section, through a series of tables and graphs, time to status adjustment by country of birth and TB burden of the country of birth has been quantified. This section is broken-down by TB burden of the countries of birth.  Note: The figures display time to status adjustment for only a subset of countries, that represent the range of median value of time to status adjustment.

\subsection{High TB incidence countries}

<<'high TB regions-collapse',eval=FALSE>>=
df <- ddply(hightb, .(region), function(x) c(count=nrow(x)))
df <- rename(df, c(region="Region", count="Number"))
df <- df[order(-df$Number),]
df$Percent <- 100* df$Number/sum(df$Number)
@

<<'High TB incidence regions-table',eval=FALSE>>=
print(xtable(df, caption="Status adjustment applicants from high WHO TB incidence regions",digits=c(0,0,0,2)), include.rownames=FALSE)
@

<<'high TB COB-collapse'>>=
df <- ddply(hightb, .(COB), function(x) c(count=nrow(x), mean=mean(x$texamyr), max=max(x$texamyr), quantile=quantile(x$texamyr, seq(.25, .75, by=.25))))
df <- rename(df, c(COB="Country of birth", count="Number", mean="Mean time to exam", max="Max.time to exam"))
df <- df[order(-df$Number),]
@

<<'High TB incidence countries-table'>>=
print(xtable(df, caption="Status adjustment applicants from countries with high WHO TB incidence",digits=c(0,0,0,2,2,2,2,2)), include.rownames=FALSE)
@

<<'time to status adjustment-high TB COB',fig.height=4,fig.width=8,fig.align='center',warning=FALSE,fig.cap="Status adjustment in non-immigrant applicants from high TB incidence countries">>=

#survival frame
t.survfit <- survfit(Surv(texamyr, status)~COB, data=hightbsubset)
t.survfit$cumevent <- 1- t.survfit$surv #to create cumulative frequency variable (1-surv)
t.survframe <- createSurvivalFrame(t.survfit)
xref=data.frame(xval=c(2.5, 5))
yref=data.frame(yval=c(0.5, 0.8))
p <- qplot_survival(t.survframe, FALSE) + xlab("time to exam (years)") + ylab("Cumulative probability \nof adjusting status") 

p + geom_vline(aes(xintercept=xval), data=xref, color="blue", linetype="dashed") + geom_hline(aes(yintercept=yval), data=yref, color="blue", linetype="dashed") + scale_y_continuous(labels=percent) + scale_x_continuous(limits=c(0, 20), breaks=c(0, 2.5, 5, 7.5, 10, 15, 20)) + theme_bw() + scale_colour_hue(name="Country of birth",
breaks=c("COB=Kenya", "COB=Peru", "COB=India", "COB=Viet Nam", "COB=Nigeria"),
labels=c("Kenya", "Peru", "India", "Viet Nam", 'Nigeria'),                                                                                                                                                                                                                                                                                                             l=40) + opts(legend.justification=c(1,0), legend.position=c(1,0))
@
\FloatBarrier

\newpage
\subsection{Medium TB incidence countries}

<<'medium TB regions-collapse',eval=FALSE>>=
df <- ddply(mediumtb, .(region), function(x) c(count=nrow(x)))
df <- rename(df, c(region="Region", count="Number"))
df <- df[order(-df$Number),]
df$Percent <- 100* df$Number/sum(df$Number)
@

<<'medium TB incidence regions-table',eval=FALSE>>=
print(xtable(df, caption="Status adjustment applicants from high WHO TB incidence regions",digits=c(0,0,0,2)), include.rownames=FALSE)
@

<<'medium TB COB-collapse'>>=
df <- ddply(mediumtb, .(COB), function(x) c(count=nrow(x), mean=mean(x$texamyr), max=max(x$texamyr), quantile=quantile(x$texamyr, seq(.25, .75, by=.25))))
df <- rename(df, c(COB="Country of birth", count="Number", mean="Mean time to exam", max="Max.time to exam"))
df <- df[order(-df$Number),]
@

<<'Medium TB incidence countries-table'>>=
print(xtable(df, caption="Status adjustment applicants from countries with medium WHO TB incidence",digits=c(0,0,0,2,2,2,2,2)), include.rownames=FALSE)
@

<<'time to status adjustment-medium TB COB',fig.height=4,fig.width=8,fig.align='center', warning=FALSE,fig.cap="Status adjustment in non-immigrant applicants from medium TB incidence countries">>=

#survival frame
t.survfit <- survfit(Surv(texamyr, status)~COB, data=mediumtbsubset)
t.survfit$cumevent <- 1- t.survfit$surv #to create cumulative frequency variable (1-surv)
t.survframe <- createSurvivalFrame(t.survfit)

p <- qplot_survival(t.survframe, FALSE) + xlab("time to exam (years)") + ylab("Cumulative probability \nof adjusting status") + opts(legend.justification=c(1,0), legend.position=c(1,0))
xref=data.frame(xval=c(2.5, 5))
yref=data.frame(yval=c(0.5, 0.8))
p + geom_vline(aes(xintercept=xval), data=xref, color="blue", linetype="dashed") + geom_hline(aes(yintercept=yval), data=yref, color="blue", linetype="dashed") + scale_y_continuous(labels=percent) + scale_x_continuous(limits=c(0, 20), breaks=c(0, 2.5, 5, 7.5, 10, 15, 20)) + theme_bw() + scale_colour_hue(name="Country of birth",
breaks=c("COB=China", "COB=Japan", "COB=El Salvador", "COB=Guatemala", "COB=Poland"),
labels=c("China", "Japan", "El Salvador", "Guatemala", 'Poland'),                                                                                                                                                                                                                                                                                                             l=40) + opts(legend.justification=c(1,0), legend.position=c(1,0))
@
\FloatBarrier

\newpage
\subsection{Low TB incidence countries}

<<'low TB COB-collapse'>>=
df <- ddply(lowtb, .(COB), function(x) c(count=nrow(x), mean=mean(x$texamyr), max=max(x$texamyr), quantile=quantile(x$texamyr, seq(.25, .75, by=.25))))
df <- rename(df, c(COB="Country of birth", count="Number", mean="Mean time to exam", max="Max.time to exam"))
df <- df[order(-df$Number),]
@

<<'Low TB incidence countries-table'>>=
print(xtable(df, caption="Status adjustment applicants from countries with low WHO TB incidence",digits=c(0,0,0,2,2,2,2,2)), include.rownames=FALSE)
@

<<'time to status adjustment-low TB COB',fig.height=4,fig.width=8,fig.align='center',warning=FALSE,fig.cap="Status adjustment in non-immigrant applicants from low TB incidence countries">>=

#survival frame
t.survfit <- survfit(Surv(texamyr, status)~COB, data=lowtbsubset)
t.survfit$cumevent <- 1- t.survfit$surv #to create cumulative frequency variable (1-surv)
t.survframe <- createSurvivalFrame(t.survfit)

p <- qplot_survival(t.survframe, FALSE) + xlab("time to exam (years)") + ylab("Cumulative probability \nof adjusting status") + opts(legend.justification=c(1,0), legend.position=c(1,0))
xref=data.frame(xval=c(2.5, 5))
yref=data.frame(yval=c(0.5, 0.8))
p + geom_vline(aes(xintercept=xval), data=xref, color="blue", linetype="dashed") + geom_hline(aes(yintercept=yval), data=yref, color="blue", linetype="dashed") + scale_y_continuous(labels=percent) + scale_x_continuous(limits=c(0, 20), breaks=c(0, 2.5, 5, 7.5, 10, 15, 20)) + theme_bw() + scale_colour_hue(name="Country of birth",
breaks=c("COB=Mexico", "COB=Cuba", "COB=Trinidad", "COB=Germany", "COB=Jamaica"),
labels=c("Mexico", "Cuba", "Trinidad", "Germany", "Jamaica"),                                                                                                                                                                                                                                                                                                             l=40) + opts(legend.justification=c(1,0), legend.position=c(1,0))
@
\FloatBarrier

\end{document}
